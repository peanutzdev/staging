{"version":3,"file":"static/js/6131.8c9b9750.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-64a24de2.browser.esm.js","../node_modules/@thirdweb-dev/wallets/dist/errors-4bdf81d2.browser.esm.js","../node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-e4cc0175.browser.esm.js","../node_modules/@thirdweb-dev/wallets/evm/connectors/injected/dist/thirdweb-dev-wallets-evm-connectors-injected.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\nimport { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    /** Unique connector id */\n    _defineProperty(this, \"id\", void 0);\n    /** Connector name */\n    _defineProperty(this, \"name\", void 0);\n    /** Chains connector supports */\n    _defineProperty(this, \"chains\", void 0);\n    /** Options to use with connector */\n    _defineProperty(this, \"options\", void 0);\n    /** Whether connector is usable */\n    _defineProperty(this, \"ready\", void 0);\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n","import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${cause}`);\n    _defineProperty(this, \"cause\", void 0);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"data\", void 0);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n","function normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { a as assertWindowEthereum } from '../../../../dist/assertWindowEthereum-b48c1686.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-64a24de2.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport { a as ConnectorNotFoundError, U as UserRejectedRequestError, R as ResourceUnavailableError, C as ChainNotConfiguredError, A as AddChainError, S as SwitchChainError } from '../../../../dist/errors-4bdf81d2.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nfunction getInjectedName(ethereum) {\n  if (!ethereum) {\n    return \"Injected\";\n  }\n  const getName = provider => {\n    if (provider.isAvalanche) {\n      return \"Core Wallet\";\n    }\n    if (provider.isBitKeep) {\n      return \"BitKeep\";\n    }\n    if (provider.isBraveWallet) {\n      return \"Brave Wallet\";\n    }\n    if (provider.isCoinbaseWallet) {\n      return \"Coinbase Wallet\";\n    }\n    if (provider.isExodus) {\n      return \"Exodus\";\n    }\n    if (provider.isFrame) {\n      return \"Frame\";\n    }\n    if (provider.isKuCoinWallet) {\n      return \"KuCoin Wallet\";\n    }\n    if (provider.isMathWallet) {\n      return \"MathWallet\";\n    }\n    if (provider.isOneInchIOSWallet || provider.isOneInchAndroidWallet) {\n      return \"1inch Wallet\";\n    }\n    if (provider.isOpera) {\n      return \"Opera\";\n    }\n    if (provider.isPortal) {\n      return \"Ripio Portal\";\n    }\n    if (provider.isTally) {\n      return \"Tally\";\n    }\n    if (provider.isTokenPocket) {\n      return \"TokenPocket\";\n    }\n    if (provider.isTokenary) {\n      return \"Tokenary\";\n    }\n    if (provider.isTrust || provider.isTrustWallet) {\n      return \"Trust Wallet\";\n    }\n    if (provider.isMetaMask) {\n      return \"MetaMask\";\n    }\n  };\n\n  // Some injected providers detect multiple other providers and create a list at `ethers.providers`\n  if (ethereum.providers?.length) {\n    // Deduplicate names using Set\n    // Coinbase Wallet puts multiple providers in `ethereum.providers`\n    const nameSet = new Set();\n    let unknownCount = 1;\n    for (const provider of ethereum.providers) {\n      let name = getName(provider);\n      if (!name) {\n        name = `Unknown Wallet #${unknownCount}`;\n        unknownCount += 1;\n      }\n      nameSet.add(name);\n    }\n    const names = [...nameSet];\n    if (names.length) {\n      return names;\n    }\n    return names[0] ?? \"Injected\";\n  }\n  return getName(ethereum) ?? \"Injected\";\n}\n\nvar _provider = /*#__PURE__*/new WeakMap();\nclass InjectedConnector extends WagmiConnector {\n  constructor(arg) {\n    const defaultOptions = {\n      shimDisconnect: true,\n      getProvider: () => {\n        if (assertWindowEthereum(globalThis.window)) {\n          return globalThis.window.ethereum;\n        }\n      }\n    };\n    const options = {\n      ...defaultOptions,\n      ...arg.options\n    };\n    super({\n      chains: arg.chains,\n      options\n    });\n    _defineProperty(this, \"id\", void 0);\n    /**\n     * Name of the injected connector\n     */\n    _defineProperty(this, \"name\", void 0);\n    /**\n     * Whether the connector is ready to be used\n     *\n     * `true` if the injected provider is found\n     */\n    _defineProperty(this, \"ready\", void 0);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"connectorStorage\", void 0);\n    _defineProperty(this, \"shimDisconnectKey\", \"injected.shimDisconnect\");\n    /**\n     * handles the `accountsChanged` event from the provider\n     * * emits `change` event if connected to a different account\n     * * emits `disconnect` event if no accounts available\n     */\n    _defineProperty(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    /**\n     * handles the `chainChanged` event from the provider\n     * * emits `change` event if connected to a different chain\n     */\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    /**\n     * handles the `disconnect` event from the provider\n     * * emits `disconnect` event\n     */\n    _defineProperty(this, \"onDisconnect\", async error => {\n      // We need this as MetaMask can emit the \"disconnect\" event upon switching chains.\n      // If MetaMask emits a `code: 1013` error, wait for reconnection before disconnecting\n      // https://github.com/MetaMask/providers/pull/120\n      if (error.code === 1013) {\n        const provider = await this.getProvider();\n        if (provider) {\n          const isAuthorized = await this.getAccount();\n          if (isAuthorized) {\n            return;\n          }\n        }\n      }\n      this.emit(\"disconnect\");\n\n      // Remove `shimDisconnect` => it signals that wallet is disconnected\n      if (this.options.shimDisconnect) {\n        await this.connectorStorage.removeItem(this.shimDisconnectKey);\n      }\n    });\n    const _provider2 = options.getProvider();\n\n    // set the name of the connector\n    if (typeof options.name === \"string\") {\n      // if name is given, use that\n      this.name = options.name;\n    } else if (_provider2) {\n      // if injected provider is detected, get name from it\n      const detectedName = getInjectedName(_provider2);\n      if (options.name) {\n        this.name = options.name(detectedName);\n      } else {\n        if (typeof detectedName === \"string\") {\n          this.name = detectedName;\n        } else {\n          this.name = detectedName[0];\n        }\n      }\n    } else {\n      // else default to \"Injected\"\n      this.name = \"Injected\";\n    }\n    this.id = \"injected\";\n    this.ready = !!_provider2;\n    this.connectorStorage = arg.connectorStorage;\n  }\n\n  /**\n   * * Connect to the injected provider\n   * * switch to the given chain if `chainId` is specified as an argument\n   */\n  async connect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      this.setupListeners();\n\n      // emit \"connecting\" event\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n\n      // request account addresses from injected provider\n      const accountAddresses = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // get the first account address\n      const firstAccountAddress = utils.getAddress(accountAddresses[0]);\n\n      // Switch to given chain if a chainId is specified\n      let connectedChainId = await this.getChainId();\n      // Check if currently connected chain is unsupported\n      // chainId is considered unsupported if chainId is not in the list of this.chains array\n      let isUnsupported = this.isChainUnsupported(connectedChainId);\n\n      // if chainId is specified and it is not the same as the currently connected chain\n      if (options.chainId && connectedChainId !== options.chainId) {\n        // switch to the given chain\n        try {\n          await this.switchChain(options.chainId);\n          // recalculate connectedChainId and isUnsupported\n          connectedChainId = options.chainId;\n          isUnsupported = this.isChainUnsupported(options.chainId);\n        } catch (e) {\n          console.error(`Could not switch to chain id: ${options.chainId}`, e);\n        }\n      }\n\n      // if shimDisconnect is enabled\n      if (this.options.shimDisconnect) {\n        // add the shim shimDisconnectKey => it signals that wallet is connected\n        await this.connectorStorage.setItem(this.shimDisconnectKey, \"true\");\n      }\n      const connectionInfo = {\n        account: firstAccountAddress,\n        chain: {\n          id: connectedChainId,\n          unsupported: isUnsupported\n        },\n        provider\n      };\n      this.emit(\"connect\", connectionInfo);\n      return connectionInfo;\n    } catch (error) {\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      if (error.code === -32002) {\n        throw new ResourceUnavailableError(error);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * disconnect from the injected provider\n   */\n  async disconnect() {\n    // perform cleanup\n    const provider = await this.getProvider();\n    if (!provider?.removeListener) {\n      return;\n    }\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n\n    // if shimDisconnect is enabled\n    if (this.options.shimDisconnect) {\n      // Remove the shimDisconnectKey => it signals that wallet is disconnected\n      await this.connectorStorage.removeItem(this.shimDisconnectKey);\n    }\n  }\n\n  /**\n   * @returns The first account address from the injected provider\n   */\n  async getAccount() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n\n    // return checksum address\n    // https://docs.ethers.org/v5/api/utils/address/#utils-getAddress\n    return utils.getAddress(accounts[0]);\n  }\n\n  /**\n   * @returns The `chainId` of the currently connected chain from injected provider normalized to a `number`\n   */\n  async getChainId() {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    return provider.request({\n      method: \"eth_chainId\"\n    }).then(normalizeChainId);\n  }\n\n  /**\n   * get the injected provider\n   */\n  async getProvider() {\n    const provider = this.options.getProvider();\n    if (provider) {\n      _classPrivateFieldSet(this, _provider, provider);\n      // setting listeners\n    }\n\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  /**\n   * get a `signer` for given `chainId`\n   */\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n\n    // ethers.providers.Web3Provider\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n\n  /**\n   *\n   * @returns `true` if the connector is connected and address is available, else `false`\n   */\n  async isAuthorized() {\n    try {\n      // `false` if connector is disconnected\n      if (this.options.shimDisconnect &&\n      // If shim does not exist in storage, wallet is disconnected\n      !Boolean(await this.connectorStorage.getItem(this.shimDisconnectKey))) {\n        return false;\n      }\n      const provider = await this.getProvider();\n      if (!provider) {\n        throw new ConnectorNotFoundError();\n      }\n      // `false` if no account address available, else `true`\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      // `false` if any error thrown\n      return false;\n    }\n  }\n\n  /**\n   * switch to given chain\n   */\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    if (!provider) {\n      throw new ConnectorNotFoundError();\n    }\n    const chainIdHex = utils.hexValue(chainId);\n    try {\n      // request provider to switch to given chainIdHex\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: chainIdHex\n        }]\n      });\n      const chain = this.chains.find(_chain => _chain.chainId === chainId);\n      if (chain) {\n        return chain;\n      }\n      return {\n        chainId: chainId,\n        name: `Chain ${chainIdHex}`,\n        slug: `${chainIdHex}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        chain: \"\",\n        shortName: \"\",\n        testnet: true\n      };\n    } catch (error) {\n      // if could not switch to given chainIdHex\n\n      // if tried to connect to a chain that is not configured\n      const chain = this.chains.find(_chain => _chain.chainId === chainId);\n      if (!chain) {\n        throw new ChainNotConfiguredError({\n          chainId,\n          connectorId: this.id\n        });\n      }\n\n      // if chain is not added to provider\n      if (error.code === 4902 ||\n      // Unwrapping for MetaMask Mobile\n      // https://github.com/MetaMask/metamask-mobile/issues/2944#issuecomment-976988719\n      error?.data?.originalError?.code === 4902) {\n        try {\n          // request provider to add chain\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: chainIdHex,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: chain.rpc,\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          // if user rejects request to add chain\n          if (this.isUserRejectedRequestError(addError)) {\n            throw new UserRejectedRequestError(error);\n          }\n\n          // else other error\n          throw new AddChainError();\n        }\n      }\n      if (this.isUserRejectedRequestError(error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    if (provider.on) {\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n    }\n  }\n  isUserRejectedRequestError(error) {\n    return error.code === 4001;\n  }\n}\n\nexport { InjectedConnector };\n"],"names":["WagmiConnector","_EventEmitter","_inherits","_super","_createSuper","_ref","_this","_classCallCheck","_ref$chains","chains","defaultChains","options","call","_defineProperty","_assertThisInitialized","_createClass","key","value","chain","_chain$explorers$map","_chain$explorers","explorers","map","x","url","length","undefined","chainId","this","some","EventEmitter","RpcError","_Error","message","cause","code","data","Number","isInteger","Error","concat","_wrapNativeSuper","ProviderRpcError","_RpcError","_super2","AddChainError","_Error2","_super3","_this2","apply","arguments","ChainNotConfiguredError","_Error3","_super4","_this3","connectorId","ConnectorNotFoundError","_Error4","_super5","_this4","ResourceUnavailableError","_RpcError2","_super6","_this5","SwitchChainError","_ProviderRpcError","_super7","_this6","UserRejectedRequestError","_ProviderRpcError2","_super8","_this7","normalizeChainId","parseInt","trim","substring","_provider","WeakMap","InjectedConnector","_WagmiConnector","arg","defaultOptions","shimDisconnect","getProvider","assertWindowEthereum","globalThis","window","ethereum","_objectSpread","_classPrivateFieldInitSpec","writable","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accounts","wrap","_context","prev","next","emit","account","utils","stop","_x","id","unsupported","isChainUnsupported","_ref2","_callee2","error","_context2","sent","getAccount","abrupt","connectorStorage","removeItem","shimDisconnectKey","_x2","_provider2","name","detectedName","_ethereum$providers","_getName","getName","provider","isAvalanche","isBitKeep","isBraveWallet","isCoinbaseWallet","isExodus","isFrame","isKuCoinWallet","isMathWallet","isOneInchIOSWallet","isOneInchAndroidWallet","isOpera","isPortal","isTally","isTokenPocket","isTokenary","isTrust","isTrustWallet","isMetaMask","providers","_names$","_step","nameSet","Set","unknownCount","_iterator","_createForOfIteratorHelper","s","n","done","add","err","e","f","names","_toConsumableArray","getInjectedName","ready","_connect","_callee3","accountAddresses","firstAccountAddress","connectedChainId","isUnsupported","connectionInfo","_args3","_context3","setupListeners","type","request","method","getChainId","switchChain","t0","console","setItem","t1","isUserRejectedRequestError","_disconnect","_callee4","_context4","removeListener","onAccountsChanged","onChainChanged","onDisconnect","_getAccount","_callee5","_context5","_getChainId","_callee6","_context6","then","_getProvider","_callee7","_context7","_classPrivateFieldSet","_classPrivateFieldGet","_getSigner","_callee8","_yield$Promise$all","_yield$Promise$all2","_args8","_context8","Promise","all","_slicedToArray","getSigner","_isAuthorized","_callee9","_context9","Boolean","getItem","t2","t3","_switchChain","_callee10","chainIdHex","_error$data","_chain2","_context10","params","find","_chain","slug","nativeCurrency","decimals","symbol","rpc","shortName","testnet","originalError","chainName","rpcUrls","blockExplorerUrls","getBlockExplorerUrls","_x3","_setupListeners","_callee11","_context11","on"],"sourceRoot":""}